sample_n(n(), ufn, replace = TRUE))
rows = c(n:nrow(res))
sock2015Dboot[rows,] = res
k = 1
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n+nrows(res))
rows = c(n+nrow(res))
rows = c(n:n+nrow(res))
rows
print(rows)
n = 1
k = 1
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res))
sock2015Dboot[rows,] = res
n = n + nrow(res)
}
#omited the last two models in each set since their weights were 0.
lep1 = glmmTMB(all.leps ~ site.region + year + spp +
site.region * year +
(1 | collection), data = mainlice, family = nbinom2)
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
n = 1
k = 1
rows = c(n:(n+nrow(res)))
sock2015Dboot[rows,] = res
sock2015Dboot = matrix(nrow = nrow(sock2015D), ncol = 7)
n = 1
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)))
sock2015Dboot[rows,] = res
sock2015Dboot[rows,]
rows = c(n:(n+nrow(res)))
sock2015Dboot[rows,]
rows = c(n:(nrow(res)))
sock2015Dboot[rows,] = res
n = n + nrow(res)
k = 1
k  = 2
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(nrow(res)))
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
k = 2
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(nrow(res)))
rows = c(n:(n+nrow(res)))
rows = c(n:(n+nrow(res)1))
rows = c(n:(n+nrow(res)-1))
sock2015Dboot[rows,] = res
unique(sock2015D$collection)
sock2015Dboot = matrix(nrow = nrow(sock2015D), ncol = 7)
n = 1
for(k in unique(sock2015D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2015Dboot[rows,] = res
n = n + nrow(res)
}
View(sock2015Dboot)
View(sock2015Dboot)
bootinterval = matrix(nrow = 24, ncol = 10000)
sock2015Dboot = matrix(nrow = nrow(sock2015D), ncol = 7)
n = 1
for(k in unique(sock2015D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2015Dboot[rows,] = res
n = n + nrow(res)
}
sock2015Jboot = matrix(nrow = nrow(sock2015J), ncol = 7)
n = 1
for(k in unique(sock2015J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2015J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2015Jboot[rows,] = res
n = n + nrow(res)
}
sock2016Dboot = matrix(nrow = nrow(sock2016D), ncol = 7)
n = 1
for(k in unique(sock2016D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2016D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2016Dboot[rows,] = res
n = n + nrow(res)
}
sock2016Jboot = matrix(nrow = nrow(sock2016J), ncol = 7)
n = 1
for(k in unique(sock2016J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2016J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2016Jboot[rows,] = res
n = n + nrow(res)
}
sock2017Dboot = matrix(nrow = nrow(sock2017D), ncol = 7)
n = 1
for(k in unique(sock2017D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2017D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2017Dboot[rows,] = res
n = n + nrow(res)
}
sock2017Jboot = matrix(nrow = nrow(sock2017J), ncol = 7)
n = 1
for(k in unique(sock2017J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2017J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2017Jboot[rows,] = res
n = n + nrow(res)
}
sock2018Dboot = matrix(nrow = nrow(sock2018D), ncol = 7)
n = 1
for(k in unique(sock2018D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2018D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2018Dboot[rows,] = res
n = n + nrow(res)
}
sock2018Jboot = matrix(nrow = nrow(sock2018J), ncol = 7)
n = 1
for(k in unique(sock2018J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(sock2018J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
sock2018Jboot[rows,] = res
n = n + nrow(res)
}
#pink
chum2015Dboot = matrix(nrow = nrow(chum2015D), ncol = 7)
n = 1
for(k in unique(chum2015D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2015Dboot[rows,] = res
n = n + nrow(res)
}
chum2015Jboot = matrix(nrow = nrow(chum2015J), ncol = 7)
n = 1
for(k in unique(chum2015J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2015J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2015Jboot[rows,] = res
n = n + nrow(res)
}
chum2016Dboot = matrix(nrow = nrow(chum2016D), ncol = 7)
n = 1
for(k in unique(chum2016D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2016D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2016Dboot[rows,] = res
n = n + nrow(res)
}
chum2016Jboot = matrix(nrow = nrow(chum2016J), ncol = 7)
n = 1
for(k in unique(chum2016J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2016J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2016Jboot[rows,] = res
n = n + nrow(res)
}
chum2017Dboot = matrix(nrow = nrow(chum2017D), ncol = 7)
n = 1
for(k in unique(chum2017D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2017D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2017Dboot[rows,] = res
n = n + nrow(res)
}
chum2017Jboot = matrix(nrow = nrow(chum2017J), ncol = 7)
n = 1
for(k in unique(chum2017J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2017J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2017Jboot[rows,] = res
n = n + nrow(res)
}
chum2018Dboot = matrix(nrow = nrow(chum2018D), ncol = 7)
n = 1
for(k in unique(chum2018D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2018D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2018Dboot[rows,] = res
n = n + nrow(res)
}
chum2018Jboot = matrix(nrow = nrow(chum2018J), ncol = 7)
n = 1
for(k in unique(chum2018J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(chum2018J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
chum2018Jboot[rows,] = res
n = n + nrow(res)
}
#pink
pink2015Dboot = matrix(nrow = nrow(pink2015D), ncol = 7)
n = 1
for(k in unique(pink2015D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2015D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2015Dboot[rows,] = res
n = n + nrow(res)
}
pink2015Jboot = matrix(nrow = nrow(pink2015J), ncol = 7)
n = 1
for(k in unique(pink2015J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2015J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2015Jboot[rows,] = res
n = n + nrow(res)
}
pink2016Dboot = matrix(nrow = nrow(pink2016D), ncol = 7)
n = 1
for(k in unique(pink2016D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2016D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2016Dboot[rows,] = res
n = n + nrow(res)
}
pink2016Jboot = matrix(nrow = nrow(pink2016J), ncol = 7)
n = 1
for(k in unique(pink2016J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2016J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2016Jboot[rows,] = res
n = n + nrow(res)
}
pink2017Dboot = matrix(nrow = nrow(pink2017D), ncol = 7)
n = 1
for(k in unique(pink2017D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2017D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2017Dboot[rows,] = res
n = n + nrow(res)
}
pink2017Jboot = matrix(nrow = nrow(pink2017J), ncol = 7)
n = 1
for(k in unique(pink2017J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2017J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2017Jboot[rows,] = res
n = n + nrow(res)
}
pink2018Dboot = matrix(nrow = nrow(pink2018D), ncol = 7)
n = 1
for(k in unique(pink2018D$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2018D %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2018Dboot[rows,] = res
n = n + nrow(res)
}
pink2018Jboot = matrix(nrow = nrow(pink2018J), ncol = 7)
n = 1
for(k in unique(pink2018J$collection)) { #for each collection
#resample the observations in the collection with replacement for the number of rows in that given collection
res <- as.matrix(pink2018J %>%
group_by(collection) %>%
filter(collection == k) %>%
sample_n(n(), ufn, replace = TRUE))
rows = c(n:(n+nrow(res)-1))
pink2018Jboot[rows,] = res
n = n + nrow(res)
}
#bind the matrices so we can have our resampled dataframe
bootdata = data.frame(rbind(sock2015Dboot,sock2015Jboot,sock2016Dboot,sock2016Jboot,sock2017Dboot,sock2017Jboot,sock2018Dboot,sock2018Jboot,
chum2015Dboot,chum2015Jboot,chum2016Dboot,chum2016Jboot,chum2017Dboot,chum2017Jboot,chum2018Dboot,chum2018Jboot,
pink2015Dboot,pink2015Jboot,pink2016Dboot,pink2016Jboot,pink2017Dboot,pink2017Jboot,pink2018Dboot,pink2018Jboot))
#now run our set of models
#omited the last two models in each set since their weights were 0.
lep1 = glmmTMB(all.leps ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep2 = glmmTMB(all.leps ~ site.region + year + spp +
spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep3 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep4 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep5 = glmmTMB(all.leps ~ site.region + year + spp +
(1 | collection), data = bootdata, family = nbinom2)
lep6 = glmmTMB(all.leps ~ site.region + year + spp +
spp * year +
(1 | collection), data = bootdata, family = nbinom2)
lep7 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region +
(1 | collection), data = bootdata, family = nbinom2)
lep8 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal1 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year + site.region * spp +
(1 | collection), data = bootdata, family = nbinom2)
cal2 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal3 = glmmTMB(all.cal ~ site.region + year + spp +
spp * site.region + site.region * year + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal4 = glmmTMB(all.cal ~ site.region + year + spp +
spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal5 = glmmTMB(all.cal ~ site.region + year + spp +
(1 | collection), data = bootdata, family = nbinom2)
cal6 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal7 = glmmTMB(all.cal ~ site.region + year + spp +
spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal8 = glmmTMB(all.cal ~ site.region + year + spp +
spp * site.region + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
#get the predictions of the estiamtes
lep1pred <- ggpredict(lep1, terms = c('spp', 'year', 'site.region'))
lep2pred <- ggpredict(lep2, terms = c('spp', 'year', 'site.region'))
lep3pred <- ggpredict(lep3, terms = c('spp', 'year', 'site.region'))
lep4pred <- ggpredict(lep4, terms = c('spp', 'year', 'site.region'))
lep5pred <- ggpredict(lep5, terms = c('spp', 'year', 'site.region'))
lep6pred <- ggpredict(lep6, terms = c('spp', 'year', 'site.region'))
lep7pred <- ggpredict(lep7, terms = c('spp', 'year', 'site.region'))
lep8pred <- ggpredict(lep8, terms = c('spp', 'year', 'site.region'))
View(bootdata)
pink2018Jboot
View(chum2015D)
#bind the matrices so we can have our resampled dataframe
bootdata = data.frame(rbind(sock2015Dboot,sock2015Jboot,sock2016Dboot,sock2016Jboot,sock2017Dboot,sock2017Jboot,sock2018Dboot,sock2018Jboot,
chum2015Dboot,chum2015Jboot,chum2016Dboot,chum2016Jboot,chum2017Dboot,chum2017Jboot,chum2018Dboot,chum2018Jboot,
pink2015Dboot,pink2015Jboot,pink2016Dboot,pink2016Jboot,pink2017Dboot,pink2017Jboot,pink2018Dboot,pink2018Jboot)) %>%
rename(all.cal = X1, all.leps = X2, spp = X3, site.region = X4, collection = X5, year = X6, ufn = X7)
#now run our set of models
#omited the last two models in each set since their weights were 0.
lep1 = glmmTMB(all.leps ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep2 = glmmTMB(all.leps ~ site.region + year + spp +
spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep3 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep4 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
lep5 = glmmTMB(all.leps ~ site.region + year + spp +
(1 | collection), data = bootdata, family = nbinom2)
lep6 = glmmTMB(all.leps ~ site.region + year + spp +
spp * year +
(1 | collection), data = bootdata, family = nbinom2)
lep7 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region +
(1 | collection), data = bootdata, family = nbinom2)
lep8 = glmmTMB(all.leps ~ site.region + year + spp +
spp * site.region + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal1 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year + site.region * spp +
(1 | collection), data = bootdata, family = nbinom2)
cal2 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal3 = glmmTMB(all.cal ~ site.region + year + spp +
spp * site.region + site.region * year + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal4 = glmmTMB(all.cal ~ site.region + year + spp +
spp * year + site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal5 = glmmTMB(all.cal ~ site.region + year + spp +
(1 | collection), data = bootdata, family = nbinom2)
cal6 = glmmTMB(all.cal ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
cal7 = glmmTMB(all.cal ~ site.region + year + spp +
spp * year +
(1 | collection), data = bootdata, family = nbinom2)
cal8 = glmmTMB(all.cal ~ site.region + year + spp +
spp * site.region + spp * year +
(1 | collection), data = bootdata, family = nbinom2)
#get the predictions of the estiamtes
lep1pred <- ggpredict(lep1, terms = c('spp', 'year', 'site.region'))
lep2pred <- ggpredict(lep2, terms = c('spp', 'year', 'site.region'))
lep3pred <- ggpredict(lep3, terms = c('spp', 'year', 'site.region'))
#now run our set of models
#omited the last two models in each set since their weights were 0.
lep1 = glmmTMB(all.leps ~ site.region + year + spp +
site.region * year +
(1 | collection), data = bootdata, family = nbinom2)
summary(bootdata$all.cal)
summary(bootdata$all.cal)
summary(bootdata$all.cal)
